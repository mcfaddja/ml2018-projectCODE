import readline
import scipy.sparse
import scipy
import numpy as np
import pandas as pd
likes = pd.read_csv("/Users/jamster/data/training/relation/relation.csv")
likesUIDs = likes.ix[:,1].values
likesLIDs = likes.ix[:,2].values
lsLikesUIDs = likesUIDs.tolist()
lsLikesLIDs = likesLIDs.tolist()
setLikesUIDs = set(lsLikesUIDs)
setLikesLIDs = set(lsLikesLIDs)
unqLikesUIDs = (list(setLikesUIDs))
unqLikesLIDs = (list(setLikesLIDs))
allLikesLS = [lsLikesUIDs, lsLikesLIDs]
allLikesLS = [lsLikesUIDs, [str(x) for x in lsLikesLIDs]]
allLikesLS = list(map(list, zip(*allLikesLS)))
aDictLikes2 = {}
for aUID in unqLikesUIDs:
	aDictLikes2[aUID]=[]

for row in allLikesLS:
	aDictLikes2[row[0]].append(row[1])

combDICT = {}
for uid in unqLikesUIDs:
	tmpDICT={}
	tmpLS = aDictLikes2[uid]
	for row in tmpLS:
		tmpDICT[str(row)]=1
	combDICT[uid]=tmpDICT

tryTHIS=[]
for uid in unqLikesUIDs:
	tryTHIS.append(combDICT[uid])

from sklearn.feature_extraction import DictVectorizer
v = DictVectorizer()
comeON=v.fit_transform(tryTHIS)
profUIDs=profiles.ix[:,1].values
profAGEs=profiles.ix[:,2].values
profSEXs=profiles.ix[:,3].values
profOPEs=profiles.ix[:,4].values
profCONs=profiles.ix[:,5].values
profEXTs=profiles.ix[:,6].values
profAGRs=profiles.ix[:,7].values
profNEUs=profiles.ix[:,8].values
from sklearn import metrics
from sklearn.naive_bayes import GaussianNB, BernoulliNB, MultinomialNB
from sklearn.model_selection import KFold
profUIDs0 = profUIDs.reshape(9500,1)
profAGEs0 = profAGEs.reshape(9500,1)
profSEXs0 = profSEXs.reshape(9500,1)
profOPEs0 = profOPEs.reshape(9500,1)
profCONs0 = profCONs.reshape(9500,1)
profEXTs0 = profEXTs.reshape(9500,1)
profAGRs0 = profAGRs.reshape(9500,1)
profNEUs0 = profNEUs.reshape(9500,1)
profAGEs1 = np.concatenate((profUIDs0, profAGEs0), axis=1)
profSEXs1 = np.concatenate((profUIDs0, profSEXs0), axis=1)
profOPEs1 = np.concatenate((profUIDs0, profOPEs0), axis=1)
profCONs1 = np.concatenate((profUIDs0, profCONs0), axis=1)
profEXTs1 = np.concatenate((profUIDs0, profEXTs0), axis=1)
profAGRs1 = np.concatenate((profUIDs0, profAGRs0), axis=1)
profNEUs1 = np.concatenate((profUIDs0, profNEUs0), axis=1)

profiles=pd.read_csv("/Users/jamster/data/training/profile/profile.csv")
ageDFo = profiles[['userid', 'age']].copy()
ageDFo['age_grp'] = pd.cut(ageDFo['age'], [0,25,35,50,150], right=False, labels=['xx-24','25-34','35-49','50+'])
ageGRPuids=ageDFo.ix[:,0].values
ageGRPgrps=ageDFo.ix[:,2].values

profiles=pd.read_csv("/Users/jamster/data/training/profile/profile.csv")
ageDFo = profiles[['userid', 'age']].copy()
ageDFo['age_grp'] = pd.cut(ageDFo['age'], [0,25,35,50,150], right=False, labels=[1, 2, 3, 4])
ageGRPuids=ageDFo.ix[:,0].values
ageGRPgrps=ageDFo.ix[:,2].values
ageGRPuids0 = ageGRPgrps.reshape(9500,1)
ageGRPgrps0 = ageGRPgrps.reshape(9500,1)








